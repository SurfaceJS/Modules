@import "../styles/container.scss";

$icon-size:      48px;
$icon-font-size: 24px;

@mixin set-color($property)
{

    &.light
    {
        #{$property}: var(--smd--color, var(--smd--light--secondary, var(--smd--secondary)));
    }

    &.dark
    {
        #{$property}: var(--smd--color, var(--smd--dark--secondary, var(--smd--secondary)));
    }

    &:not(.light, .dark)
    {
        #{$property}: var(--smd--color, var(--smd--secondary));
    }
}

:host
{
    display:         inline-flex;
    align-items:     center;
    cursor:          pointer;
    font-family:     "Roboto", sans-serif;
    font-size:       14px;
    font-weight:     500;
    height:          32px;
    justify-content: center;
    text-transform:  uppercase;
    user-select:     none;

    .container
    {
        align-items:      center;
        border-radius: 4px;
        height:        inherit;
        justify-content:  center;
        min-width:     64px;
        padding:       0 16px;
        position:      relative;
        width:         inherit;

        @include set-color("background-color");

        &,
        &.light
        {
            color: var(--smd--text-color, var(--smd--light--text, black));
        }

        &.dark
        {
            color: var(--smd--text-color, var(--smd--dark--text, white));
        }

        &.outlined
        {
            @include set-color("border-color");
            @include set-color("color");

            background-color: transparent;
            border-style:     solid;
            border-width:     1px;
        }

        &.text
        {
            @include set-color("color");

            background-color: transparent;
        }

        &.rounded
        {
            border-radius: 20px;
        }

        &.fab,
        &.icon
        {
            border-radius: 50%;
            font-size:     inherit;
            min-height:    inherit;
            min-width:     inherit;
        }

        &.icon
        {
            @include set-color("color");

            background-color: transparent;
        }

        &.tile
        {
            border-radius: 0;
        }

        &.block
        {
            max-width: inherit;
            min-width: 100%;
        }

        &::before
        {
            background-color: currentColor;
            border-radius:    inherit;
            bottom:           0;
            color:            inherit;
            content:          "";
            left:             0;
            opacity:          0;
            pointer-events:   none;
            position:         absolute;
            right:            0;
            top:              0;
            transition:       opacity 0.2s cubic-bezier(0.4, 0, 0.6, 1);
        }
    }
}

:host(:hover) .container::before
{
    opacity: 0.06;
}

:host(:focus) .container::before,
:host container:focus::before
{
    opacity: 0.12;
}

:host([block]),
:host([block=true])
{
    display:   flex;
    flex:      0 1 auto;
    min-width: 100%;
}

:host([icon]),
:host([icon=true]),
:host([fab]),
:host([fab=true])
{
    font-size:  $icon-font-size;
    height:     $icon-size;
    min-height: 0;
    min-width:  0;
    width:      $icon-size;
}